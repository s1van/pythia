path = "/home/siyuan/workspace/mjoin-pythia/drivers/sample_queries/data/";
buffsize = 1048576;

scanP: 
{
  type = "parallelscan";

  filetype = "text";
  files = ("part.tbl.bz2");
  mapping = ( (0) );
  schema = ( "long", "dec" );
  verbose = "true";
};

scanO: 
{
  type = "parallelscan";

  filetype = "text";
  files = ("order.tbl.bz2");
  mapping = ( (0) );
  schema = ( "long", "long" );
  verbose = "true";
};

scanL:
{
  type = "parallelscan";

  filetype = "text";
  files = ("lineitem.tbl.bz2");
  mapping = ( (0) );
  schema = ( "long", "long", "dec" );
  verbose = "true";
};

scanD:
{
  type = "parallelscan";

  filetype = "text";
  files = ("lineitem.tbl.bz2");
  mapping = ( (0) );
  schema = ( "long", "long", "dec" );
  verbose = "true";
};

joinP : 
{
  type = "nprrjoin";

  hash : 
  {
    fn = "modulo";
    range = [ 1, 800000 ];
    buckets = 262144;
  };

  tuplesperbucket = 4;
  buildjattr = 0;
  probejattr = 1;

  projection = ( "B$1", "P$0", "P$2" );

	attrs = ( [0, 1], [1, 2], [0, 2] );
  threadgroups = ( [0] );
  allocpolicy = "striped";
};

joinO : 
{
  type = "hashjoin";

  hash : 
  {
    fn = "modulo";
    range = [ 1, 1500000 ];
    buckets = 524288;
  };

  tuplesperbucket = 4;
  buildjattr = 0;
  probejattr = 1;

  projection = ( "B$1", "P$0", "P$2" );

  threadgroups = ( [0] );
  allocpolicy = "striped";
};

merge : 
{
  type = "merge";

  threads = 1;

};

sum :
{
  type = "aggregate_sum";
  field = 0;
  sumfield = 1;
  hash:
  {
    fn = "range";
    range = [ 0, 99999 ];
    buckets = 1000;
    field = 0;
  };
};

eval:
{
  type = "q1eval";
};

cycleaccountant:
{
  type = "cycle_accountant";
};

treeroot:
{
  name: "cycleaccountant";
  input:
  {
    name: "sum";
    input:
    {
      name: "merge";
      input:
      {
        name: "cycleaccountant";
        input:
        {
          name: "sum";
          input:
          {
            name: "cycleaccountant";
            input:
            {
              name: "eval";
              input:
              {
                name: "joinO";
                build:
                {
                  name: "scanO";
                };
                probe:
                {
                  name: "joinP";
                  build:
                  {
                    name: "scanP";
                  };
                  probe:
                  {
                    name: "cycleaccountant";
                    input: 
                    {
                      name: "scanL";
                    };
                  };
                  duole:
                  {
                    name: "scanD";
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
